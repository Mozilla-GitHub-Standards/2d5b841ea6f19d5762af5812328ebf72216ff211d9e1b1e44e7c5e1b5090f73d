/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Personas.
 *
 * The Initial Developer of the Original Code is Mozilla.
 * Portions created by the Initial Developer are Copyright (C) 2007
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Myk Melez <myk@mozilla.org>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

[scriptable, uuid(f41fc9e5-6f7b-4d4a-ab2e-4675bbe10f08)]
interface nsIPersonaService : nsISupports
{
  // JavaScript data structures providing lists of categories and personas,
  // available in the wrappedJSObject properties of these attributes.
  readonly attribute nsISupports categories;
  readonly attribute nsISupports personas;

  /**
   * Display the given persona without making it the selected persona.  Useful
   * for showing users who are browsing a directory of personas what a given
   * persona will look like when selected, f.e. on mouseover.  Consumers who
   * call this method should call resetPersona when the user stops previewing
   * the persona, f.e. on mouseout.  Otherwise the displayed persona will revert
   * to the selected persona when it is reloaded, the browser is restarted,
   * or the user selects another persona.
   */
  void previewPersona(in AString aPersonaID);

  /**
   * Reset the displayed persona to the selected persona.  Useful for returning
   * to the selected persona after previewing personas.  Also called by the pref
   * observer when the selected persona changes.
   */
  void resetPersona();
};
